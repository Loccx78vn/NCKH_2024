scale_x_continuous(expand = c(0, 0), labels = paste0(seq(0, 100, 25), "%")) +
scale_y_discrete(expand = c(0, 0)) +
theme(axis.text = element_text(color = "grey30", size = 11, family = my_font)) +
theme(plot.title = ggtext::element_markdown(size = 16, face = "bold")) +
theme(plot.caption = element_text(size = 10.5, color = "grey40", vjust = -1.5, hjust = 0)) +
theme(plot.subtitle = element_text(size = 11.5, color = "grey10")) +
theme(plot.title.position = "plot") +
theme(plot.caption.position = "plot")->gg1
gg1
m_new <-m %>% pivot_longer(cols = everything(),
names_to = "variable",
values_to = "value")
ggplot()+
ggridges::geom_density_ridges(data  = m_new,
aes(x  = value,
y  = as.factor(variable),
fill = as.factor(variable),
height = ..density..),
scale = 3,
alpha = .6) +
scale_x_continuous(limits = c(0,6))+
geom_vline(xintercept = 3, col = "red",size = 2)+
geom_point(data = data.frame(list(variable = unique(m_new$variable), value = colMeans(m))),
aes(x = value,
y = as.factor(variable)),
size = 3,
col  = "blue")+
theme(legend.position="none")+
viridis::scale_fill_viridis(discrete = TRUE)+
labs(x        = "Gía trị Likert",
y        = "Biến trong thang đo")
library(corrplot)
library(grDevices)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot.mixed(cor(df_new %>%
select(c("SAFETY",
"SUPPLYINPUT",
"OFFER",
"AWARENESS",
"REVERSE_DECISION"))),
tl.cex = 0.6,
number.cex = 1.5,
lower = "number",
upper = "circle",
tl.col = "black")
#Recode the value of AGE variable:
df_new<-df_new %>%
mutate(AGE = recode(AGE,
"Dưới 18 tuổi" = "A",
"Từ 19 đến 30 tuổi" = "B",
"Từ 31 đến 50 tuổi" = "C",
"Từ 50 tuổi trở lên" = "D"))
#Show the amount and percentage of group in AGE:
tabyl(df_new$AGE)
#Convert the RETURN_EW into factor class:
df_new$RETURN_EW<-as.factor(df_new$RETURN_EW)
summary(reg1<-aov(AWARENESS~AGE,data = df_new))
plot(TukeyHSD(reg1,conf.level=0.95), las=1 , col="brown")
#Create a matrix contain 3 dummy variables:
res <- model.matrix(~AGE, data = df_new)
head(res[, -1])
#Add dummy cols into dataset
df_new<-df_new %>%
mutate(A_B = res[,2],
A_C = res[,3],
A_D = res[,4])
#Build model:
model <- '
# Direct effects
AWARENESS ~ a*A_B  +  b*A_C + c*A_D
REVERSE_DECISION ~ d*AWARENESS
# Indirect effect:
indirect := d*(a + b + c)
# Total effect:
total := indirect'
reg4 <- sem(model,estimator = "ML",data = df_new)
#Create a matrix contain 3 dummy variables:
res <- model.matrix(~AGE, data = df_new)
head(res[, -1])
#Add dummy cols into dataset
df_new<-df_new %>%
mutate(A_B = res[,2],
A_C = res[,3],
A_D = res[,4])
#Build model:
model <- '
# Direct effects
AWARENESS ~ a*A_B  +  b*A_C + c*A_D
REVERSE_DECISION ~ d*AWARENESS
# Indirect effect:
indirect := d*(a + b + c)
# Total effect:
total := indirect'
library(sem)
reg4 <- sem(model,estimator = "ML",data = df_new)
#Create a matrix contain 3 dummy variables:
res <- model.matrix(~AGE, data = df_new)
head(res[, -1])
#Add dummy cols into dataset
df_new<-df_new %>%
mutate(A_B = res[,2],
A_C = res[,3],
A_D = res[,4])
#Build model:
model <- '
# Direct effects
AWARENESS ~ a*A_B  +  b*A_C + c*A_D
REVERSE_DECISION ~ d*AWARENESS
# Indirect effect:
indirect := d*(a + b + c)
# Total effect:
total := indirect'
library(lavaan)
reg4 <- sem(model,estimator = "ML",data = df_new)
##Summarize the results
summary(reg4,
standardized = TRUE,
fit.measures = TRUE)
library(BMA)
#Define the dependent and independent variables:
yvar<-df_new[,("REVERSE_DECISION")]
xvars<-df_new[,c(          "SAFETY","OFFER","AWARENESS","SUPPLYINPUT")]
bma = bicreg(xvars, yvar)
#| warning: false
#| message: false
#| echo: false
#Call packages
pacman::p_load(rio,
here,
janitor,
tidyverse,
dplyr,
magrittr,
ggplot2,
purrr,
lubridate,
mice,
plotly
)
#Data:
library(readxl)
df<- read_excel("C:/Users/locca/Downloads/Data_Rác thải điện tử.xlsx",
sheet = "Đã mã hóa")
#| warning: false
#| message: false
df_new <-df %>%
mutate(SAFETY = (SAFETY1+SAFETY2+SAFETY3+SAFETY4)/4,
OFFER = (OFFER1+OFFER2+OFFER3+OFFER4)/4,
AWARENESS = (AWARENESS1+AWARENESS2+AWARENESS3+AWARENESS4)/4,
SUPPLYINPUT =(SUPPLYINPUT1+SUPPLYINPUT2+SUPPLYINPUT3+SUPPLYINPUT4)/4,
REVERSE_DECISION = (REVERSE_DECISION1+REVERSE_DECISION2+REVERSE_DECISION3+REVERSE_DECISION4)/4)
m<-df %>% select(contains(c("SAFETY",
"OFFER",
"SUPPLY",
"AWARE",
"REVERSE")))
df_new<-df_new %>%
select(-c(names(m)))
##Convert categorical cols in df_new to factor class:
cols <- c(names(df %>%  select (-c(names(m)))))
df_new[cols]<-lapply(df_new[cols],factor)
##Check again:
sapply(df_new, class)
#| warning: false
#| message: false
## Using the {mvnormalTest} package for univariate (Shapiro-Wilk’s W) and multivariate normality (Mardia’s Multivariate Skewness and Kurtosis tests).
library(mvnormalTest)
check<-mardia(df_new %>% select(c("SAFETY",
"OFFER",
"AWARENESS",
"SUPPLYINPUT",
"REVERSE_DECISION")))
## Check the Univariate normality test
check$uv.shapiro
## Check the Multivariate normaility test
check$mv.test
#| warning: false
#| message: false
##Define the model:
library(lavaan)
mediation_model <- '
# Direct effects
AWARENESS ~ a*SAFETY  +  b*OFFER + c*SUPPLYINPUT
REVERSE_DECISION ~ d*AWARENESS + e*SAFETY + f*OFFER
# Indirect effect:
indirect := d*(a + b + c)
# Total effect:
total := e + f + indirect'
##Estimate the mediation model
reg3 <- sem(mediation_model,estimator = "ML",data = df_new)
##Summarize the results
summary(reg3,
standardized = TRUE,
fit.measures = TRUE)
##Plot the result:
label1<-list(SAFETY = "Sự an toàn",
OFFER = "Sự ưu đãi",
SUPPLYINPUT = "Cung cấp nguyên liệu đầu vào",
AWARENESS = "Nhận thức xã hội",
REVERSE_DECISION = "Quyết định tham gia Logistics ngược")
lavaanPlot::lavaanPlot(model = reg3,
labels = label1,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"),
coefs = TRUE)
#| warning: false
#| message: false
##Or we can use Preacher & Hayes (2004) approach:
###Using meidation package:
library(mediation)
fitM <- lm(AWARENESS ~ SUPPLYINPUT + SAFETY + OFFER,
data=df_new)
fitY <- lm(REVERSE_DECISION ~ AWARENESS + SAFETY + OFFER,
data=df_new)
fitMed <- mediate(fitM,
fitY,
sims = 1000,
boot = TRUE,
treat = "SAFETY",
mediator="AWARENESS")
summary(fitMed)
plot(fitMed)
#| warning: false
#| message: false
# Load the necessary libraries
library(ggplot2)
# Create a bar plot to visualize the path coefficients
ggplot(df_new,
aes(x = path,
y = coefficient,
fill = path)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = round(coefficient, 3)), vjust = -0.3, size = 4) +
theme_minimal() +
theme(legend.position = "none") +
ylab("Coefficient") +
xlab("Path") +
ggtitle("Mediation Analysis Results")
#| echo: false
#Call packages
pacman::p_load(rio,
here,
janitor,
tidyverse,
dplyr,
magrittr,
ggplot2,
purrr,
lubridate,
mice,
plotly)
#Data:
library(readxl)
df<- read_excel("C:/Users/locca/Downloads/Data_Rác thải điện tử.xlsx",
sheet = "Đã mã hóa")
#| echo: false
df_new <-df %>%
mutate(SAFETY = (SAFETY1+SAFETY2+SAFETY3+SAFETY4)/4,
OFFER = (OFFER1+OFFER2+OFFER3+OFFER4)/4,
AWARENESS = (AWARENESS1+AWARENESS2+AWARENESS3+AWARENESS4)/4,
SUPPLYINPUT =(SUPPLYINPUT1+SUPPLYINPUT2+SUPPLYINPUT3+SUPPLYINPUT4)/4,
REVERSE_DECISION = (REVERSE_DECISION1+REVERSE_DECISION2+REVERSE_DECISION3+REVERSE_DECISION4)/4)
m<-df %>% select(contains(c("SAFETY",
"OFFER",
"SUPPLY",
"AWARE",
"REVERSE")))
#| warning: false
#| message: false
#| echo: false
#Call packages
pacman::p_load(rio,
here,
janitor,
tidyverse,
dplyr,
magrittr,
ggplot2,
purrr,
lubridate,
mice,
plotly
)
#Data:
library(readxl)
df<- read_excel("C:/Users/locca/Downloads/Data_Rác thải điện tử.xlsx",
sheet = "Đã mã hóa")
#| warning: false
#| message: false
df_new <-df %>%
mutate(SAFETY = (SAFETY1+SAFETY2+SAFETY3+SAFETY4)/4,
OFFER = (OFFER1+OFFER2+OFFER3+OFFER4)/4,
AWARENESS = (AWARENESS1+AWARENESS2+AWARENESS3+AWARENESS4)/4,
SUPPLYINPUT =(SUPPLYINPUT1+SUPPLYINPUT2+SUPPLYINPUT3+SUPPLYINPUT4)/4,
REVERSE_DECISION = (REVERSE_DECISION1+REVERSE_DECISION2+REVERSE_DECISION3+REVERSE_DECISION4)/4)
m<-df %>% select(contains(c("SAFETY",
"OFFER",
"SUPPLY",
"AWARE",
"REVERSE")))
#| echo: false
df_new <-df %>%
mutate(SAFETY = (SAFETY1+SAFETY2+SAFETY3+SAFETY4)/4,
OFFER = (OFFER1+OFFER2+OFFER3+OFFER4)/4,
AWARENESS = (AWARENESS1+AWARENESS2+AWARENESS3+AWARENESS4)/4,
SUPPLYINPUT =(SUPPLYINPUT1+SUPPLYINPUT2+SUPPLYINPUT3+SUPPLYINPUT4)/4,
REVERSE_DECISION = (REVERSE_DECISION1+REVERSE_DECISION2+REVERSE_DECISION3+REVERSE_DECISION4)/4)
m<-df %>% select(contains(c("SAFETY",
"OFFER",
"SUPPLY",
"AWARE",
"REVERSE")))
#| warning: false
#| message: false
#| echo: false
#Call packages
pacman::p_load(rio,
here,
janitor,
tidyverse,
dplyr,
magrittr,
ggplot2,
purrr,
lubridate,
mice,
plotly
)
#Data:
library(readxl)
df<- read_excel("C:/Users/locca/Downloads/Data_Rác thải điện tử.xlsx",
sheet = "Đã mã hóa")
#| warning: false
#| message: false
df_new <-df %>%
mutate(SAFETY = (SAFETY1+SAFETY2+SAFETY3+SAFETY4)/4,
OFFER = (OFFER1+OFFER2+OFFER3+OFFER4)/4,
AWARENESS = (AWARENESS1+AWARENESS2+AWARENESS3+AWARENESS4)/4,
SUPPLYINPUT =(SUPPLYINPUT1+SUPPLYINPUT2+SUPPLYINPUT3+SUPPLYINPUT4)/4,
REVERSE_DECISION = (REVERSE_DECISION1+REVERSE_DECISION2+REVERSE_DECISION3+REVERSE_DECISION4)/4)
m<-df %>% select(contains(c("SAFETY",
"OFFER",
"SUPPLY",
"AWARE",
"REVERSE")))
df_new<-df_new %>%
select(-c(names(m)))
##Convert categorical cols in df_new to factor class:
cols <- c(names(df %>%  select (-c(names(m)))))
df_new[cols]<-lapply(df_new[cols],factor)
##Check again:
sapply(df_new, class)
#| warning: false
#| message: false
## Using the {mvnormalTest} package for univariate (Shapiro-Wilk’s W) and multivariate normality (Mardia’s Multivariate Skewness and Kurtosis tests).
library(mvnormalTest)
check<-mardia(df_new %>% select(c("SAFETY",
"OFFER",
"AWARENESS",
"SUPPLYINPUT",
"REVERSE_DECISION")))
## Check the Univariate normality test
check$uv.shapiro
## Check the Multivariate normaility test
check$mv.test
#| warning: false
#| message: false
##Define the model:
library(lavaan)
mediation_model <- '
# Direct effects
AWARENESS ~ a*SAFETY  +  b*OFFER + c*SUPPLYINPUT
REVERSE_DECISION ~ d*AWARENESS + e*SAFETY + f*OFFER
# Indirect effect:
indirect := d*(a + b + c)
# Total effect:
total := e + f + indirect'
##Estimate the mediation model
reg3 <- sem(mediation_model,estimator = "ML",data = df_new)
##Summarize the results
summary(reg3,
standardized = TRUE,
fit.measures = TRUE)
##Plot the result:
label1<-list(SAFETY = "Sự an toàn",
OFFER = "Sự ưu đãi",
SUPPLYINPUT = "Cung cấp nguyên liệu đầu vào",
AWARENESS = "Nhận thức xã hội",
REVERSE_DECISION = "Quyết định tham gia Logistics ngược")
lavaanPlot::lavaanPlot(model = reg3,
labels = label1,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"),
coefs = TRUE)
#| warning: false
#| message: false
##Or we can use Preacher & Hayes (2004) approach:
###Using meidation package:
library(mediation)
fitM <- lm(AWARENESS ~ SUPPLYINPUT + SAFETY + OFFER,
data=df_new)
fitY <- lm(REVERSE_DECISION ~ AWARENESS + SAFETY + OFFER,
data=df_new)
fitMed <- mediate(fitM,
fitY,
sims = 1000,
boot = TRUE,
treat = "SAFETY",
mediator="AWARENESS")
summary(fitMed)
plot(fitMed)
#| warning: false
#| message: false
# Load the necessary libraries
library(ggplot2)
# Create a bar plot to visualize the path coefficients
ggplot(df_new,
aes(x = path,
y = coefficient,
fill = path)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = round(coefficient, 3)), vjust = -0.3, size = 4) +
theme_minimal() +
theme(legend.position = "none") +
ylab("Coefficient") +
xlab("Path") +
ggtitle("Mediation Analysis Results")
names(df_new)
class(fitMed)
#| warning: false
#| message: false
plot(fitMed, group.plots=TRUE)
#| warning: false
#| message: false
#| layout: [[50,50]]
library(gvlma)
gvlma(fitM)
gvlma(fitY)
#| warning: false
#| message: false
#| layout: [[50,50]]
#| label: Multicollinearity
## Using the {mvnormalTest} package for univariate (Shapiro-Wilk’s W) and multivariate normality (Mardia’s Multivariate Skewness and Kurtosis tests).
library(mvnormalTest)
check<-mardia(df_new %>% select(c("SAFETY",
"OFFER",
"AWARENESS",
"SUPPLYINPUT",
"REVERSE_DECISION")))
#| warning: false
#| message: false
#| echo: false
#Call packages
pacman::p_load(rio,
here,
janitor,
tidyverse,
dplyr,
magrittr,
ggplot2,
purrr,
lubridate,
mice,
plotly
)
#Data:
library(readxl)
df<- read_excel("C:/Users/locca/Downloads/Data_Rác thải điện tử.xlsx",
sheet = "Đã mã hóa")
#| warning: false
#| message: false
df_new <-df %>%
mutate(SAFETY = (SAFETY1+SAFETY2+SAFETY3+SAFETY4)/4,
OFFER = (OFFER1+OFFER2+OFFER3+OFFER4)/4,
AWARENESS = (AWARENESS1+AWARENESS2+AWARENESS3+AWARENESS4)/4,
SUPPLYINPUT =(SUPPLYINPUT1+SUPPLYINPUT2+SUPPLYINPUT3+SUPPLYINPUT4)/4,
REVERSE_DECISION = (REVERSE_DECISION1+REVERSE_DECISION2+REVERSE_DECISION3+REVERSE_DECISION4)/4)
m<-df %>% select(contains(c("SAFETY",
"OFFER",
"SUPPLY",
"AWARE",
"REVERSE")))
m<-df %>% select(contains(c("SAFETY",
"OFFER",
"SUPPLY",
"AWARE",
"REVERSE")))
names(df_new)
names(df)
names(df)
names(df_new)
df_new <-df %>%
mutate(SAFETY = (SAFETY1+SAFETY2+SAFETY3+SAFETY4)/4,
OFFER = (OFFER1+OFFER2+OFFER3+OFFER4)/4,
AWARENESS = (AWARENESS1+AWARENESS2+AWARENESS3+AWARENESS4)/4,
SUPPLYINPUT =(SUPPLYINPUT1+SUPPLYINPUT2+SUPPLYINPUT3+SUPPLYINPUT4)/4,
REVERSE_DECISION = (REVERSE_DECISION1+REVERSE_DECISION2+REVERSE_DECISION3+REVERSE_DECISION4)/4)
names(df_new)
m<-df %>% select(contains("SAFETY",
"OFFER",
"SUPPLY",
"AWARE",
"REVERSE"))
m<-c(df %>% select(contains("SAFETY",
"OFFER",
"SUPPLY",
"AWARE",
"REVERSE")) %>%
names)
df %>% select(contains("SAFETY"))
df %>% select(contains("SAFE"
))
